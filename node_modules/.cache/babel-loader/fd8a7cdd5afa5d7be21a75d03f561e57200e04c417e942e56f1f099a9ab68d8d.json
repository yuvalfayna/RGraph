{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst commander_1 = require(\"./commander\");\nconst errors_1 = require(\"./errors\");\nclass RedisMultiCommand {\n  constructor() {\n    Object.defineProperty(this, \"queue\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"scriptsInUse\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n  }\n  static generateChainId() {\n    return Symbol('RedisMultiCommand Chain Id');\n  }\n  addCommand(args, transformReply) {\n    this.queue.push({\n      args,\n      transformReply\n    });\n  }\n  addFunction(name, fn, args) {\n    const transformedArguments = (0, commander_1.fCallArguments)(name, fn, fn.transformArguments(...args));\n    this.queue.push({\n      args: transformedArguments,\n      transformReply: fn.transformReply\n    });\n    return transformedArguments;\n  }\n  addScript(script, args) {\n    const transformedArguments = [];\n    if (this.scriptsInUse.has(script.SHA1)) {\n      transformedArguments.push('EVALSHA', script.SHA1);\n    } else {\n      this.scriptsInUse.add(script.SHA1);\n      transformedArguments.push('EVAL', script.SCRIPT);\n    }\n    if (script.NUMBER_OF_KEYS !== undefined) {\n      transformedArguments.push(script.NUMBER_OF_KEYS.toString());\n    }\n    const scriptArguments = script.transformArguments(...args);\n    transformedArguments.push(...scriptArguments);\n    if (scriptArguments.preserve) {\n      transformedArguments.preserve = scriptArguments.preserve;\n    }\n    this.addCommand(transformedArguments, script.transformReply);\n    return transformedArguments;\n  }\n  handleExecReplies(rawReplies) {\n    const execReply = rawReplies[rawReplies.length - 1];\n    if (execReply === null) {\n      throw new errors_1.WatchError();\n    }\n    return this.transformReplies(execReply);\n  }\n  transformReplies(rawReplies) {\n    const errorIndexes = [],\n      replies = rawReplies.map((reply, i) => {\n        if (reply instanceof errors_1.ErrorReply) {\n          errorIndexes.push(i);\n          return reply;\n        }\n        const {\n          transformReply,\n          args\n        } = this.queue[i];\n        return transformReply ? transformReply(reply, args.preserve) : reply;\n      });\n    if (errorIndexes.length) throw new errors_1.MultiErrorReply(replies, errorIndexes);\n    return replies;\n  }\n}\nexports.default = RedisMultiCommand;","map":{"version":3,"names":["Object","defineProperty","exports","value","commander_1","require","errors_1","RedisMultiCommand","constructor","enumerable","configurable","writable","Set","generateChainId","Symbol","addCommand","args","transformReply","queue","push","addFunction","name","fn","transformedArguments","fCallArguments","transformArguments","addScript","script","scriptsInUse","has","SHA1","add","SCRIPT","NUMBER_OF_KEYS","undefined","toString","scriptArguments","preserve","handleExecReplies","rawReplies","execReply","length","WatchError","transformReplies","errorIndexes","replies","map","reply","i","ErrorReply","MultiErrorReply","default"],"sources":["C:/rgraph/node_modules/@redis/client/dist/lib/multi-command.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commander_1 = require(\"./commander\");\nconst errors_1 = require(\"./errors\");\nclass RedisMultiCommand {\n    constructor() {\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"scriptsInUse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n    }\n    static generateChainId() {\n        return Symbol('RedisMultiCommand Chain Id');\n    }\n    addCommand(args, transformReply) {\n        this.queue.push({\n            args,\n            transformReply\n        });\n    }\n    addFunction(name, fn, args) {\n        const transformedArguments = (0, commander_1.fCallArguments)(name, fn, fn.transformArguments(...args));\n        this.queue.push({\n            args: transformedArguments,\n            transformReply: fn.transformReply\n        });\n        return transformedArguments;\n    }\n    addScript(script, args) {\n        const transformedArguments = [];\n        if (this.scriptsInUse.has(script.SHA1)) {\n            transformedArguments.push('EVALSHA', script.SHA1);\n        }\n        else {\n            this.scriptsInUse.add(script.SHA1);\n            transformedArguments.push('EVAL', script.SCRIPT);\n        }\n        if (script.NUMBER_OF_KEYS !== undefined) {\n            transformedArguments.push(script.NUMBER_OF_KEYS.toString());\n        }\n        const scriptArguments = script.transformArguments(...args);\n        transformedArguments.push(...scriptArguments);\n        if (scriptArguments.preserve) {\n            transformedArguments.preserve = scriptArguments.preserve;\n        }\n        this.addCommand(transformedArguments, script.transformReply);\n        return transformedArguments;\n    }\n    handleExecReplies(rawReplies) {\n        const execReply = rawReplies[rawReplies.length - 1];\n        if (execReply === null) {\n            throw new errors_1.WatchError();\n        }\n        return this.transformReplies(execReply);\n    }\n    transformReplies(rawReplies) {\n        const errorIndexes = [], replies = rawReplies.map((reply, i) => {\n            if (reply instanceof errors_1.ErrorReply) {\n                errorIndexes.push(i);\n                return reply;\n            }\n            const { transformReply, args } = this.queue[i];\n            return transformReply ? transformReply(reply, args.preserve) : reply;\n        });\n        if (errorIndexes.length)\n            throw new errors_1.MultiErrorReply(replies, errorIndexes);\n        return replies;\n    }\n}\nexports.default = RedisMultiCommand;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}