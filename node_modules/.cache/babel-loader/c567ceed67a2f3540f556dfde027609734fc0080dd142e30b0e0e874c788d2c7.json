{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformDoublesReply = exports.transformDoubleReply = exports.pushCompressionArgument = void 0;\nconst ADD = require(\"./ADD\");\nconst BYRANK = require(\"./BYRANK\");\nconst BYREVRANK = require(\"./BYREVRANK\");\nconst CDF = require(\"./CDF\");\nconst CREATE = require(\"./CREATE\");\nconst INFO = require(\"./INFO\");\nconst MAX = require(\"./MAX\");\nconst MERGE = require(\"./MERGE\");\nconst MIN = require(\"./MIN\");\nconst QUANTILE = require(\"./QUANTILE\");\nconst RANK = require(\"./RANK\");\nconst RESET = require(\"./RESET\");\nconst REVRANK = require(\"./REVRANK\");\nconst TRIMMED_MEAN = require(\"./TRIMMED_MEAN\");\nexports.default = {\n  ADD,\n  add: ADD,\n  BYRANK,\n  byRank: BYRANK,\n  BYREVRANK,\n  byRevRank: BYREVRANK,\n  CDF,\n  cdf: CDF,\n  CREATE,\n  create: CREATE,\n  INFO,\n  info: INFO,\n  MAX,\n  max: MAX,\n  MERGE,\n  merge: MERGE,\n  MIN,\n  min: MIN,\n  QUANTILE,\n  quantile: QUANTILE,\n  RANK,\n  rank: RANK,\n  RESET,\n  reset: RESET,\n  REVRANK,\n  revRank: REVRANK,\n  TRIMMED_MEAN,\n  trimmedMean: TRIMMED_MEAN\n};\nfunction pushCompressionArgument(args, options) {\n  if (options?.COMPRESSION) {\n    args.push('COMPRESSION', options.COMPRESSION.toString());\n  }\n  return args;\n}\nexports.pushCompressionArgument = pushCompressionArgument;\nfunction transformDoubleReply(reply) {\n  switch (reply) {\n    case 'inf':\n      return Infinity;\n    case '-inf':\n      return -Infinity;\n    case 'nan':\n      return NaN;\n    default:\n      return parseFloat(reply);\n  }\n}\nexports.transformDoubleReply = transformDoubleReply;\nfunction transformDoublesReply(reply) {\n  return reply.map(transformDoubleReply);\n}\nexports.transformDoublesReply = transformDoublesReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformDoublesReply","transformDoubleReply","pushCompressionArgument","ADD","require","BYRANK","BYREVRANK","CDF","CREATE","INFO","MAX","MERGE","MIN","QUANTILE","RANK","RESET","REVRANK","TRIMMED_MEAN","default","add","byRank","byRevRank","cdf","create","info","max","merge","min","quantile","rank","reset","revRank","trimmedMean","args","options","COMPRESSION","push","toString","reply","Infinity","NaN","parseFloat","map"],"sources":["C:/rgraph/node_modules/@redis/bloom/dist/commands/t-digest/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformDoublesReply = exports.transformDoubleReply = exports.pushCompressionArgument = void 0;\nconst ADD = require(\"./ADD\");\nconst BYRANK = require(\"./BYRANK\");\nconst BYREVRANK = require(\"./BYREVRANK\");\nconst CDF = require(\"./CDF\");\nconst CREATE = require(\"./CREATE\");\nconst INFO = require(\"./INFO\");\nconst MAX = require(\"./MAX\");\nconst MERGE = require(\"./MERGE\");\nconst MIN = require(\"./MIN\");\nconst QUANTILE = require(\"./QUANTILE\");\nconst RANK = require(\"./RANK\");\nconst RESET = require(\"./RESET\");\nconst REVRANK = require(\"./REVRANK\");\nconst TRIMMED_MEAN = require(\"./TRIMMED_MEAN\");\nexports.default = {\n    ADD,\n    add: ADD,\n    BYRANK,\n    byRank: BYRANK,\n    BYREVRANK,\n    byRevRank: BYREVRANK,\n    CDF,\n    cdf: CDF,\n    CREATE,\n    create: CREATE,\n    INFO,\n    info: INFO,\n    MAX,\n    max: MAX,\n    MERGE,\n    merge: MERGE,\n    MIN,\n    min: MIN,\n    QUANTILE,\n    quantile: QUANTILE,\n    RANK,\n    rank: RANK,\n    RESET,\n    reset: RESET,\n    REVRANK,\n    revRank: REVRANK,\n    TRIMMED_MEAN,\n    trimmedMean: TRIMMED_MEAN\n};\nfunction pushCompressionArgument(args, options) {\n    if (options?.COMPRESSION) {\n        args.push('COMPRESSION', options.COMPRESSION.toString());\n    }\n    return args;\n}\nexports.pushCompressionArgument = pushCompressionArgument;\nfunction transformDoubleReply(reply) {\n    switch (reply) {\n        case 'inf':\n            return Infinity;\n        case '-inf':\n            return -Infinity;\n        case 'nan':\n            return NaN;\n        default:\n            return parseFloat(reply);\n    }\n}\nexports.transformDoubleReply = transformDoubleReply;\nfunction transformDoublesReply(reply) {\n    return reply.map(transformDoubleReply);\n}\nexports.transformDoublesReply = transformDoublesReply;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACG,oBAAoB,GAAGH,OAAO,CAACI,uBAAuB,GAAG,KAAK,CAAC;AACvG,MAAMC,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMG,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMK,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMM,GAAG,GAAGN,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMO,KAAK,GAAGP,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMQ,GAAG,GAAGR,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMS,QAAQ,GAAGT,OAAO,CAAC,YAAY,CAAC;AACtC,MAAMU,IAAI,GAAGV,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMW,KAAK,GAAGX,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMY,OAAO,GAAGZ,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMa,YAAY,GAAGb,OAAO,CAAC,gBAAgB,CAAC;AAC9CN,OAAO,CAACoB,OAAO,GAAG;EACdf,GAAG;EACHgB,GAAG,EAAEhB,GAAG;EACRE,MAAM;EACNe,MAAM,EAAEf,MAAM;EACdC,SAAS;EACTe,SAAS,EAAEf,SAAS;EACpBC,GAAG;EACHe,GAAG,EAAEf,GAAG;EACRC,MAAM;EACNe,MAAM,EAAEf,MAAM;EACdC,IAAI;EACJe,IAAI,EAAEf,IAAI;EACVC,GAAG;EACHe,GAAG,EAAEf,GAAG;EACRC,KAAK;EACLe,KAAK,EAAEf,KAAK;EACZC,GAAG;EACHe,GAAG,EAAEf,GAAG;EACRC,QAAQ;EACRe,QAAQ,EAAEf,QAAQ;EAClBC,IAAI;EACJe,IAAI,EAAEf,IAAI;EACVC,KAAK;EACLe,KAAK,EAAEf,KAAK;EACZC,OAAO;EACPe,OAAO,EAAEf,OAAO;EAChBC,YAAY;EACZe,WAAW,EAAEf;AACjB,CAAC;AACD,SAASf,uBAAuBA,CAAC+B,IAAI,EAAEC,OAAO,EAAE;EAC5C,IAAIA,OAAO,EAAEC,WAAW,EAAE;IACtBF,IAAI,CAACG,IAAI,CAAC,aAAa,EAAEF,OAAO,CAACC,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC5D;EACA,OAAOJ,IAAI;AACf;AACAnC,OAAO,CAACI,uBAAuB,GAAGA,uBAAuB;AACzD,SAASD,oBAAoBA,CAACqC,KAAK,EAAE;EACjC,QAAQA,KAAK;IACT,KAAK,KAAK;MACN,OAAOC,QAAQ;IACnB,KAAK,MAAM;MACP,OAAO,CAACA,QAAQ;IACpB,KAAK,KAAK;MACN,OAAOC,GAAG;IACd;MACI,OAAOC,UAAU,CAACH,KAAK,CAAC;EAChC;AACJ;AACAxC,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,qBAAqBA,CAACsC,KAAK,EAAE;EAClC,OAAOA,KAAK,CAACI,GAAG,CAACzC,oBAAoB,CAAC;AAC1C;AACAH,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}