{"ast":null,"code":"\"use strict\";\n\n/**\n * A Doubly Linked List, because there aren't enough in the world...\n * this is pretty much a direct JS port of the one wikipedia\n * https://en.wikipedia.org/wiki/Doubly_linked_list\n *\n * For most usage 'insertBeginning' and 'insertEnd' should be enough\n *\n * nodes are expected to something like a POJSO like\n * {\n *   prev: null,\n *   next: null,\n *   something: 'whatever you like'\n * }\n */\nclass DoublyLinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  insertBeginning(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.length++;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n  }\n  insertEnd(node) {\n    if (this.tail === null) {\n      this.insertBeginning(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n  }\n  insertAfter(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.length++;\n  }\n  insertBefore(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.length++;\n  }\n  remove(node) {\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    node.prev = null;\n    node.next = null;\n    this.length--;\n  }\n\n  // FIXME: this should not live here and has become a dumping ground...\n  static createNode(data) {\n    return {\n      prev: null,\n      next: null,\n      data: data\n    };\n  }\n}\nmodule.exports = DoublyLinkedList;","map":{"version":3,"names":["DoublyLinkedList","constructor","head","tail","length","insertBeginning","node","prev","next","insertBefore","insertEnd","insertAfter","newNode","remove","createNode","data","module","exports"],"sources":["C:/rgraph/node_modules/generic-pool/lib/DoublyLinkedList.js"],"sourcesContent":["\"use strict\";\n\n/**\n * A Doubly Linked List, because there aren't enough in the world...\n * this is pretty much a direct JS port of the one wikipedia\n * https://en.wikipedia.org/wiki/Doubly_linked_list\n *\n * For most usage 'insertBeginning' and 'insertEnd' should be enough\n *\n * nodes are expected to something like a POJSO like\n * {\n *   prev: null,\n *   next: null,\n *   something: 'whatever you like'\n * }\n */\nclass DoublyLinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  insertBeginning(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.length++;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n  }\n\n  insertEnd(node) {\n    if (this.tail === null) {\n      this.insertBeginning(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n  }\n\n  insertAfter(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.length++;\n  }\n\n  insertBefore(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.length++;\n  }\n\n  remove(node) {\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    node.prev = null;\n    node.next = null;\n    this.length--;\n  }\n\n  // FIXME: this should not live here and has become a dumping ground...\n  static createNode(data) {\n    return {\n      prev: null,\n      next: null,\n      data: data\n    };\n  }\n}\n\nmodule.exports = DoublyLinkedList;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,MAAM,GAAG,CAAC;EACjB;EAEAC,eAAeA,CAACC,IAAI,EAAE;IACpB,IAAI,IAAI,CAACJ,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACA,IAAI,GAAGI,IAAI;MAChB,IAAI,CAACH,IAAI,GAAGG,IAAI;MAChBA,IAAI,CAACC,IAAI,GAAG,IAAI;MAChBD,IAAI,CAACE,IAAI,GAAG,IAAI;MAChB,IAAI,CAACJ,MAAM,EAAE;IACf,CAAC,MAAM;MACL,IAAI,CAACK,YAAY,CAAC,IAAI,CAACP,IAAI,EAAEI,IAAI,CAAC;IACpC;EACF;EAEAI,SAASA,CAACJ,IAAI,EAAE;IACd,IAAI,IAAI,CAACH,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACE,eAAe,CAACC,IAAI,CAAC;IAC5B,CAAC,MAAM;MACL,IAAI,CAACK,WAAW,CAAC,IAAI,CAACR,IAAI,EAAEG,IAAI,CAAC;IACnC;EACF;EAEAK,WAAWA,CAACL,IAAI,EAAEM,OAAO,EAAE;IACzBA,OAAO,CAACL,IAAI,GAAGD,IAAI;IACnBM,OAAO,CAACJ,IAAI,GAAGF,IAAI,CAACE,IAAI;IACxB,IAAIF,IAAI,CAACE,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACL,IAAI,GAAGS,OAAO;IACrB,CAAC,MAAM;MACLN,IAAI,CAACE,IAAI,CAACD,IAAI,GAAGK,OAAO;IAC1B;IACAN,IAAI,CAACE,IAAI,GAAGI,OAAO;IACnB,IAAI,CAACR,MAAM,EAAE;EACf;EAEAK,YAAYA,CAACH,IAAI,EAAEM,OAAO,EAAE;IAC1BA,OAAO,CAACL,IAAI,GAAGD,IAAI,CAACC,IAAI;IACxBK,OAAO,CAACJ,IAAI,GAAGF,IAAI;IACnB,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACL,IAAI,GAAGU,OAAO;IACrB,CAAC,MAAM;MACLN,IAAI,CAACC,IAAI,CAACC,IAAI,GAAGI,OAAO;IAC1B;IACAN,IAAI,CAACC,IAAI,GAAGK,OAAO;IACnB,IAAI,CAACR,MAAM,EAAE;EACf;EAEAS,MAAMA,CAACP,IAAI,EAAE;IACX,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACL,IAAI,GAAGI,IAAI,CAACE,IAAI;IACvB,CAAC,MAAM;MACLF,IAAI,CAACC,IAAI,CAACC,IAAI,GAAGF,IAAI,CAACE,IAAI;IAC5B;IACA,IAAIF,IAAI,CAACE,IAAI,KAAK,IAAI,EAAE;MACtB,IAAI,CAACL,IAAI,GAAGG,IAAI,CAACC,IAAI;IACvB,CAAC,MAAM;MACLD,IAAI,CAACE,IAAI,CAACD,IAAI,GAAGD,IAAI,CAACC,IAAI;IAC5B;IACAD,IAAI,CAACC,IAAI,GAAG,IAAI;IAChBD,IAAI,CAACE,IAAI,GAAG,IAAI;IAChB,IAAI,CAACJ,MAAM,EAAE;EACf;;EAEA;EACA,OAAOU,UAAUA,CAACC,IAAI,EAAE;IACtB,OAAO;MACLR,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVO,IAAI,EAAEA;IACR,CAAC;EACH;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGjB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}