{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"./generic-transformers\");\nconst LCS_1 = require(\"./LCS\");\nvar LCS_2 = require(\"./LCS\");\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", {\n  enumerable: true,\n  get: function () {\n    return LCS_2.FIRST_KEY_INDEX;\n  }\n});\nObject.defineProperty(exports, \"IS_READ_ONLY\", {\n  enumerable: true,\n  get: function () {\n    return LCS_2.IS_READ_ONLY;\n  }\n});\nfunction transformArguments(key1, key2) {\n  const args = (0, LCS_1.transformArguments)(key1, key2);\n  args.push('IDX', 'WITHMATCHLEN');\n  return args;\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n  return {\n    matches: reply[1].map(([key1, key2, length]) => ({\n      key1: (0, generic_transformers_1.transformRangeReply)(key1),\n      key2: (0, generic_transformers_1.transformRangeReply)(key2),\n      length\n    })),\n    length: reply[3]\n  };\n}\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","generic_transformers_1","require","LCS_1","LCS_2","enumerable","get","key1","key2","args","push","reply","matches","map","length","transformRangeReply"],"sources":["C:/rgraph/node_modules/@redis/client/dist/lib/commands/LCS_IDX_WITHMATCHLEN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"./generic-transformers\");\nconst LCS_1 = require(\"./LCS\");\nvar LCS_2 = require(\"./LCS\");\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", { enumerable: true, get: function () { return LCS_2.FIRST_KEY_INDEX; } });\nObject.defineProperty(exports, \"IS_READ_ONLY\", { enumerable: true, get: function () { return LCS_2.IS_READ_ONLY; } });\nfunction transformArguments(key1, key2) {\n    const args = (0, LCS_1.transformArguments)(key1, key2);\n    args.push('IDX', 'WITHMATCHLEN');\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return {\n        matches: reply[1].map(([key1, key2, length]) => ({\n            key1: (0, generic_transformers_1.transformRangeReply)(key1),\n            key2: (0, generic_transformers_1.transformRangeReply)(key2),\n            length\n        })),\n        length: reply[3]\n    };\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,kBAAkB,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,eAAe,GAAG,KAAK,CAAC;AAC7G,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAChE,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC5BT,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,iBAAiB,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,KAAK,CAACJ,eAAe;EAAE;AAAE,CAAC,CAAC;AAC3HP,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,cAAc,EAAE;EAAEU,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,KAAK,CAACL,YAAY;EAAE;AAAE,CAAC,CAAC;AACrH,SAASD,kBAAkBA,CAACS,IAAI,EAAEC,IAAI,EAAE;EACpC,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACL,kBAAkB,EAAES,IAAI,EAAEC,IAAI,CAAC;EACtDC,IAAI,CAACC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC;EAChC,OAAOD,IAAI;AACf;AACAd,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,cAAcA,CAACc,KAAK,EAAE;EAC3B,OAAO;IACHC,OAAO,EAAED,KAAK,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC,CAACN,IAAI,EAAEC,IAAI,EAAEM,MAAM,CAAC,MAAM;MAC7CP,IAAI,EAAE,CAAC,CAAC,EAAEN,sBAAsB,CAACc,mBAAmB,EAAER,IAAI,CAAC;MAC3DC,IAAI,EAAE,CAAC,CAAC,EAAEP,sBAAsB,CAACc,mBAAmB,EAAEP,IAAI,CAAC;MAC3DM;IACJ,CAAC,CAAC,CAAC;IACHA,MAAM,EAAEH,KAAK,CAAC,CAAC;EACnB,CAAC;AACL;AACAhB,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}