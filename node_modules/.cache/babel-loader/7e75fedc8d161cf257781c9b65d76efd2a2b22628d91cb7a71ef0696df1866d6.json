{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments() {\n  return ['MEMORY', 'STATS'];\n}\nexports.transformArguments = transformArguments;\nconst FIELDS_MAPPING = {\n    'peak.allocated': 'peakAllocated',\n    'total.allocated': 'totalAllocated',\n    'startup.allocated': 'startupAllocated',\n    'replication.backlog': 'replicationBacklog',\n    'clients.slaves': 'clientsReplicas',\n    'clients.normal': 'clientsNormal',\n    'aof.buffer': 'aofBuffer',\n    'lua.caches': 'luaCaches',\n    'overhead.total': 'overheadTotal',\n    'keys.count': 'keysCount',\n    'keys.bytes-per-key': 'keysBytesPerKey',\n    'dataset.bytes': 'datasetBytes',\n    'dataset.percentage': 'datasetPercentage',\n    'peak.percentage': 'peakPercentage',\n    'allocator.allocated': 'allocatorAllocated',\n    'allocator.active': 'allocatorActive',\n    'allocator.resident': 'allocatorResident',\n    'allocator-fragmentation.ratio': 'allocatorFragmentationRatio',\n    'allocator-fragmentation.bytes': 'allocatorFragmentationBytes',\n    'allocator-rss.ratio': 'allocatorRssRatio',\n    'allocator-rss.bytes': 'allocatorRssBytes',\n    'rss-overhead.ratio': 'rssOverheadRatio',\n    'rss-overhead.bytes': 'rssOverheadBytes',\n    'fragmentation': 'fragmentation',\n    'fragmentation.bytes': 'fragmentationBytes'\n  },\n  DB_FIELDS_MAPPING = {\n    'overhead.hashtable.main': 'overheadHashtableMain',\n    'overhead.hashtable.expires': 'overheadHashtableExpires'\n  };\nfunction transformReply(rawReply) {\n  const reply = {\n    db: {}\n  };\n  for (let i = 0; i < rawReply.length; i += 2) {\n    const key = rawReply[i];\n    if (key.startsWith('db.')) {\n      const dbTuples = rawReply[i + 1],\n        db = {};\n      for (let j = 0; j < dbTuples.length; j += 2) {\n        db[DB_FIELDS_MAPPING[dbTuples[j]]] = dbTuples[j + 1];\n      }\n      reply.db[key.substring(3)] = db;\n      continue;\n    }\n    reply[FIELDS_MAPPING[key]] = Number(rawReply[i + 1]);\n  }\n  return reply;\n}\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","FIELDS_MAPPING","DB_FIELDS_MAPPING","rawReply","reply","db","i","length","key","startsWith","dbTuples","j","substring","Number"],"sources":["C:/rgraph/node_modules/@redis/client/dist/lib/commands/MEMORY_STATS.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments() {\n    return ['MEMORY', 'STATS'];\n}\nexports.transformArguments = transformArguments;\nconst FIELDS_MAPPING = {\n    'peak.allocated': 'peakAllocated',\n    'total.allocated': 'totalAllocated',\n    'startup.allocated': 'startupAllocated',\n    'replication.backlog': 'replicationBacklog',\n    'clients.slaves': 'clientsReplicas',\n    'clients.normal': 'clientsNormal',\n    'aof.buffer': 'aofBuffer',\n    'lua.caches': 'luaCaches',\n    'overhead.total': 'overheadTotal',\n    'keys.count': 'keysCount',\n    'keys.bytes-per-key': 'keysBytesPerKey',\n    'dataset.bytes': 'datasetBytes',\n    'dataset.percentage': 'datasetPercentage',\n    'peak.percentage': 'peakPercentage',\n    'allocator.allocated': 'allocatorAllocated',\n    'allocator.active': 'allocatorActive',\n    'allocator.resident': 'allocatorResident',\n    'allocator-fragmentation.ratio': 'allocatorFragmentationRatio',\n    'allocator-fragmentation.bytes': 'allocatorFragmentationBytes',\n    'allocator-rss.ratio': 'allocatorRssRatio',\n    'allocator-rss.bytes': 'allocatorRssBytes',\n    'rss-overhead.ratio': 'rssOverheadRatio',\n    'rss-overhead.bytes': 'rssOverheadBytes',\n    'fragmentation': 'fragmentation',\n    'fragmentation.bytes': 'fragmentationBytes'\n}, DB_FIELDS_MAPPING = {\n    'overhead.hashtable.main': 'overheadHashtableMain',\n    'overhead.hashtable.expires': 'overheadHashtableExpires'\n};\nfunction transformReply(rawReply) {\n    const reply = {\n        db: {}\n    };\n    for (let i = 0; i < rawReply.length; i += 2) {\n        const key = rawReply[i];\n        if (key.startsWith('db.')) {\n            const dbTuples = rawReply[i + 1], db = {};\n            for (let j = 0; j < dbTuples.length; j += 2) {\n                db[DB_FIELDS_MAPPING[dbTuples[j]]] = dbTuples[j + 1];\n            }\n            reply.db[key.substring(3)] = db;\n            continue;\n        }\n        reply[FIELDS_MAPPING[key]] = Number(rawReply[i + 1]);\n    }\n    return reply;\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,kBAAkB,GAAG,KAAK,CAAC;AAC5D,SAASA,kBAAkBA,CAAA,EAAG;EAC1B,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;AAC9B;AACAH,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,MAAMC,cAAc,GAAG;IACnB,gBAAgB,EAAE,eAAe;IACjC,iBAAiB,EAAE,gBAAgB;IACnC,mBAAmB,EAAE,kBAAkB;IACvC,qBAAqB,EAAE,oBAAoB;IAC3C,gBAAgB,EAAE,iBAAiB;IACnC,gBAAgB,EAAE,eAAe;IACjC,YAAY,EAAE,WAAW;IACzB,YAAY,EAAE,WAAW;IACzB,gBAAgB,EAAE,eAAe;IACjC,YAAY,EAAE,WAAW;IACzB,oBAAoB,EAAE,iBAAiB;IACvC,eAAe,EAAE,cAAc;IAC/B,oBAAoB,EAAE,mBAAmB;IACzC,iBAAiB,EAAE,gBAAgB;IACnC,qBAAqB,EAAE,oBAAoB;IAC3C,kBAAkB,EAAE,iBAAiB;IACrC,oBAAoB,EAAE,mBAAmB;IACzC,+BAA+B,EAAE,6BAA6B;IAC9D,+BAA+B,EAAE,6BAA6B;IAC9D,qBAAqB,EAAE,mBAAmB;IAC1C,qBAAqB,EAAE,mBAAmB;IAC1C,oBAAoB,EAAE,kBAAkB;IACxC,oBAAoB,EAAE,kBAAkB;IACxC,eAAe,EAAE,eAAe;IAChC,qBAAqB,EAAE;EAC3B,CAAC;EAAEC,iBAAiB,GAAG;IACnB,yBAAyB,EAAE,uBAAuB;IAClD,4BAA4B,EAAE;EAClC,CAAC;AACD,SAASH,cAAcA,CAACI,QAAQ,EAAE;EAC9B,MAAMC,KAAK,GAAG;IACVC,EAAE,EAAE,CAAC;EACT,CAAC;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACzC,MAAME,GAAG,GAAGL,QAAQ,CAACG,CAAC,CAAC;IACvB,IAAIE,GAAG,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;MACvB,MAAMC,QAAQ,GAAGP,QAAQ,CAACG,CAAC,GAAG,CAAC,CAAC;QAAED,EAAE,GAAG,CAAC,CAAC;MACzC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACH,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;QACzCN,EAAE,CAACH,iBAAiB,CAACQ,QAAQ,CAACC,CAAC,CAAC,CAAC,CAAC,GAAGD,QAAQ,CAACC,CAAC,GAAG,CAAC,CAAC;MACxD;MACAP,KAAK,CAACC,EAAE,CAACG,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,GAAGP,EAAE;MAC/B;IACJ;IACAD,KAAK,CAACH,cAAc,CAACO,GAAG,CAAC,CAAC,GAAGK,MAAM,CAACV,QAAQ,CAACG,CAAC,GAAG,CAAC,CAAC,CAAC;EACxD;EACA,OAAOF,KAAK;AAChB;AACAP,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}